<!-- livebook:{"default_language":"python","persist_outputs":true} -->

# jacobo notebook

```elixir
Mix.install([
  {:vega_lite, "~> 0.1"},
  {:kino_explorer, "~> 0.1"},
  {:kino_vega_lite, "~> 0.1"},
  {:ollama, "0.9.0"},
  {:explorer, "~> 0.10"},
  {:kino, "~> 0.17"},
  {:axon, "~> 0.7"},
  {:nx, "~> 0.10"},
  {:pythonx, "~> 0.4.2"},
  {:kino_pythonx, "~> 0.1.0"}
])
```

```pyproject.toml
[project]
name = "project"
version = "0.0.0"
requires-python = "==3.13.*"
dependencies = ["scipy", "pandas"]
```

## Section

```python
import scipy.io.arff
import pandas as pd


file_ = open('/data/LSST_TEST.arff')
(data_test, meta_test) = scipy.io.arff.loadarff(file_)
print(data_test[:2])
print(meta_test.names())
print(meta_test.types())
print(data_test['LSST_TRAIN'][1][['att1','att36']])
print(data_test['target'])
df = pd.DataFrame(data_test['LSST_TRAIN'])
df.head(10)
```

<!-- livebook:{"output":true} -->

```
[(array([(  22.138,   18.528,     8.8996,    -2.3216,   -11.398,   -17.423,   -21.142,   -22.552,   -20.248,   -13.598,    -5.2644, -5.8775e-01,    -3.3441,   -11.626,   -18.466,   -17.692,   -10.063,    -3.5366,    -6.4935,   -19.614,   -34.062,   -38.317,   -27.979,    -9.7705,     3.9775,     5.4502,    -2.9658,   -12.186,   -15.326,   -13.481,   -13.328,   -19.442,   -28.982,   -33.979,   -28.589,   -14.577),
        (-212.97 , -238.32 ,  -241.76  ,  -230.    ,  -213.34 ,  -200.97 ,  -197.51 ,  -202.16 ,  -210.55 ,  -217.86 ,  -221.34  , -2.2112e+02,  -219.14  ,  -217.3  ,  -216.15 ,  -214.89 ,  -212.59 ,  -209.42  ,  -207.    ,  -207.39 ,  -211.36 ,  -217.29 ,  -221.51 ,  -220.37  ,  -212.78  ,  -201.59  ,  -192.83  ,  -192.55 ,  -203.06 ,  -220.45 ,  -235.19 ,  -235.77 ,  -214.   ,  -169.19 ,  -109.33 ,   -48.194),
        (-619.17 , -689.61 ,  -593.55  ,  -600.36  ,  -649.08 ,  -623.01 ,  -602.11 ,  -628.38 ,  -629.68 ,  -605.36 ,  -603.15  , -6.1343e+02,  -614.47  ,  -614.26 ,  -616.58 ,  -614.5  ,  -614.26 ,  -621.    ,  -629.65  ,  -632.7  ,  -624.82 ,  -611.45 ,  -609.6  ,  -621.3   ,  -624.96  ,  -619.56  ,  -629.76  ,  -633.48 ,  -611.03 ,  -616.55 ,  -643.4  ,  -607.61 ,  -578.16 ,  -669.22 ,  -678.07 ,  -370.68 ),
        ( 107.06 , -535.16 , -1137.3   , -1191.4   , -1023.   , -1052.5  , -1151.4  , -1123.2  , -1086.1  , -1123.   , -1132.9   , -1.1029e+03, -1104.5   , -1121.7  , -1107.2  , -1092.1  , -1102.2  , -1114.5   , -1119.    , -1123.8  , -1116.4  , -1101.6  , -1102.6  , -1105.7   , -1090.2   , -1095.9   , -1125.4   , -1108.6  , -1068.1  , -1109.   , -1151.6  , -1073.   , -1049.   , -1209.7  , -1175.5  ,  -625.68 ),
        (2188.6  , -559.18 , -1850.5   , -1432.5   , -1949.4  , -1805.4  , -1952.7  , -1925.7  , -1957.4  , -1987.5  , -1907.4   , -1.9141e+03, -1919.6   , -1885.3  , -1920.   , -1953.2  , -1919.4  , -1925.8   , -1947.3   , -1937.4  , -1911.8  , -1899.4  , -1930.6  , -1938.    , -1930.7   , -1945.8   , -1938.2   , -1941.1  , -1916.4  , -1936.4  , -1978.5  , -1873.1  , -1966.   , -1772.5  , -2094.1  , -1734.6  ),
        (2522.1  , 2428.4  ,  1080.3   ,   699.76  , -1357.2  , -2419.3  , -2163.6  , -2426.2  , -2408.   , -2457.   , -2481.9   , -2.5585e+03, -2574.2   , -2646.2  , -2699.8  , -2612.   , -2649.5  , -2678.4   , -2627.4   , -2635.5  , -2678.3  , -2621.8  , -2570.5  , -2620.8   , -2569.6   , -2638.8   , -2649.8   , -2594.4  , -2689.2  , -2641.7  , -2651.6  , -2579.1  , -2743.3  , -2476.3  , -2748.3  , -2486.5  )],
       dtype=[('att1', '<f8'), ('att2', '<f8'), ('att3', '<f8'), ('att4', '<f8'), ('att5', '<f8'), ('att6', '<f8'), ('att7', '<f8'), ('att8', '<f8'), ('att9', '<f8'), ('att10', '<f8'), ('att11', '<f8'), ('att12', '<f8'), ('att13', '<f8'), ('att14', '<f8'), ('att15', '<f8'), ('att16', '<f8'), ('att17', '<f8'), ('att18', '<f8'), ('att19', '<f8'), ('att20', '<f8'), ('att21', '<f8'), ('att22', '<f8'), ('att23', '<f8'), ('att24', '<f8'), ('att25', '<f8'), ('att26', '<f8'), ('att27', '<f8'), ('att28', '<f8'), ('att29', '<f8'), ('att30', '<f8'), ('att31', '<f8'), ('att32', '<f8'), ('att33', '<f8'), ('att34', '<f8'), ('att35', '<f8'), ('att36', '<f8')]), b'6')
 (array([( 1494.2  ,  1239.   ,   609.25,   -32.157, -3.6654e+02,  -321.17,   -71.292,   132.21,   152.91 ,    31.897,  -95.218,  -129.22 ,  -73.358,   -0.96981,   22.245,  -13.231,  -70.554, -108.48, -112.3 ,  -94.274,  -74.654,  -64.768,  -63.022,  -61.044,  -52.282,  -37.538,  -24.835,  -23.306,  -34.594,  -48.823,  -50.455,  -31.888,    1.8588,   30.381,   37.068,   21.946),
        (  -60.007,   -98.062,  -138.48,  -174.11 , -1.9885e+02,  -209.76,  -208.02 ,  -198.35,  -187.03 ,  -179.59 , -178.92 ,  -184.58 , -193.48 , -201.42   , -204.88 , -202.28 , -194.32 , -183.38, -172.39, -163.68 , -158.29 , -155.96 , -155.76 , -156.93 , -159.46 , -164.09 , -171.58 , -181.64 , -192.06 , -198.74 , -196.68 , -181.87 , -153.23  , -113.68 ,  -69.711,  -29.465),
        (11635.   ,  5108.1  , -2310.4 ,  -641.04 ,  1.0087e+03,  -813.79,  -638.64 ,   246.18,  -407.99 ,  -493.87 ,  -86.157,  -286.29 , -363.02 , -221.01   , -257.54 , -274.2  , -258.9  , -275.2 , -291.03, -305.69 , -295.27 , -257.52 , -248.33 , -276.77 , -282.6  , -267.28 , -278.85 , -293.96 , -276.94 , -269.27 , -291.83 , -286.99 , -262.7   , -295.14 , -309.26 , -172.14 ),
        ( 7743.7  ,  4704.2  ,  -348.2 , -1578.1  ,  3.0143e+00,   332.05,  -625.26 ,  -681.13,   -65.255,  -122.1  , -518.73 ,  -442.55 , -222.27 , -305.03   , -419.2  , -356.18 , -313.43 , -361.4 , -371.71, -335.59 , -327.05 , -336.51 , -345.74 , -341.32 , -335.97 , -340.28 , -339.64 , -327.72 , -332.69 , -358.27 , -353.02 , -305.04 , -294.05  , -342.89 , -330.27 , -175.03 ),
        (10656.   , 15109.   , 17966.  , 17207.   ,  1.6174e+04, 14853.  , 11574.   , 11401.  ,  7903.   ,  2707.9  ,  107.51 ,   -25.284, -212.05 , -345.78   , -311.82 , -374.43 , -303.23 , -380.81, -318.55, -364.22 , -357.03 , -351.3  , -353.26 , -322.68 , -338.12 , -355.35 , -365.91 , -347.01 , -399.48 , -354.85 , -335.55 , -367.42 , -426.45  , -355.99 , -365.72 , -346.95 ),
        (17949.   , 19086.   , 17738.  , 18479.   ,  1.3987e+04, 10119.  , 10939.   , 10715.  , 10985.   , 10030.   , 3004.9  , -1913.7  , -319.21 ,  309.72   , -821.39 , -390.32 , -131.29 , -492.32, -316.5 , -296.81 , -449.74 , -382.13 , -413.71 , -420.97 , -309.02 , -346.81 , -397.75 , -340.64 , -313.04 , -358.43 , -359.19 , -314.49 , -336.08  , -430.95 , -421.31 , -208.4  )],
       dtype=[('att1', '<f8'), ('att2', '<f8'), ('att3', '<f8'), ('att4', '<f8'), ('att5', '<f8'), ('att6', '<f8'), ('att7', '<f8'), ('att8', '<f8'), ('att9', '<f8'), ('att10', '<f8'), ('att11', '<f8'), ('att12', '<f8'), ('att13', '<f8'), ('att14', '<f8'), ('att15', '<f8'), ('att16', '<f8'), ('att17', '<f8'), ('att18', '<f8'), ('att19', '<f8'), ('att20', '<f8'), ('att21', '<f8'), ('att22', '<f8'), ('att23', '<f8'), ('att24', '<f8'), ('att25', '<f8'), ('att26', '<f8'), ('att27', '<f8'), ('att28', '<f8'), ('att29', '<f8'), ('att30', '<f8'), ('att31', '<f8'), ('att32', '<f8'), ('att33', '<f8'), ('att34', '<f8'), ('att35', '<f8'), ('att36', '<f8')]), b'6')]
['LSST_TRAIN', 'target']
['relational', 'nominal']
[( 1494.2  ,   21.946) (  -60.007,  -29.465) (11635.   , -172.14 )
 ( 7743.7  , -175.03 ) (10656.   , -346.95 ) (17949.   , -208.4  )]
[b'6' b'6' b'6' ... b'95' b'95' b'95']
```

<!-- livebook:{"output":true} -->

```text
#Pythonx.Object<
                                                     0
  0  [[22.138, 18.528, 8.8996, -2.3216, -11.398, -1...
  1  [[1494.2, 1239.0, 609.25, -32.157, -366.54, -3...
  2  [[35.122, 44.454, 49.221, 49.295, 45.77, 40.02...
  3  [[-5.1192, -10.196, -12.057, -7.4738, 3.1863, ...
  4  [[24.487, 42.005, 31.268, -9.9832, -46.805, -3...
  5  [[-55.243, -63.965, -58.368, -38.635, -6.2424,...
  6  [[-3011.5, 663.42, 4207.7, 4509.7, 1160.2, -30...
  7  [[6.2796, 3.3881, 4.1694, 11.196, 16.63, 15.61...
  8  [[2.7158, 6.9666, 9.7878, 9.2016, 5.1301, -0.0...
  9  [[-17.799, -22.494, -23.978, -23.422, -22.958,...
>
```

```python
(data_train, meta_train) = scipy.io.arff.loadarff(open('/data/LSST_TRAIN.arff'))
print(data_train[:1])
print(meta_train.names())
print(meta_train.types())
print(data_train['LSST_TRAIN'][:1])
print(len(data_train['target']))
```

<!-- livebook:{"output":true} -->

```
[(array([( 17.597 ,  0.22974, -29.654  , -59.21 , -72.064  , -58.355 , -24.086 ,   9.5313,  19.02  ,  -3.35  , -40.648 , -61.347 , -43.567  ,  4.9636,  49.192 ,  52.197 ,   4.6215, -66.308 , -116.57  , -118.12   , -77.84   , -28.137 ,   0.75407,   2.2877,  -7.7249,  -10.118  ,   0.80155,  17.232,   31.031,  43.985,   64.09 ,   92.687,  117.42 ,  119.82 ,    91.591,   43.719),
        (  8.1713, -5.8956 , -21.296  , -29.565, -25.855  , -12.052 ,   4.3008,  14.598 ,  14.387 ,   6.0219,  -2.9042,  -4.5803,   3.4607 , 15.837 ,  22.125 ,  14.07  ,  -7.1375, -29.114 ,  -34.959 ,  -15.402  ,  21.772  ,  53.311 ,  54.744  ,  19.398 , -31.246 ,  -55.44   , -15.065  ,  98.661,  254.82 , 395.92 ,  467.47 ,  445.85 ,  348.02 ,  218.49 ,   103.78 ,   30.689),
        ( -1.7842, 16.837  ,  29.103  ,  17.971,   0.46536,  -3.7655,   1.3528,   3.458 ,  -2.0542, -10.826 , -13.918 ,  -8.3675,  -0.84096,  2.9446,   3.1921,   1.3362,  -1.0521,  -5.1266,   -7.2751,   -5.0353 ,  -0.57403,   5.2968,   6.7921 ,   2.5037,  11.452 ,   30.371  ,  35.584  ,  59.439,  136.12 , 181.8  ,  126.67 ,  200.76 ,  779.53 , 1639.8  ,  1823.8  ,  950.92 ),
        (-19.706 ,  5.039  ,  -0.47503, -45.606, -59.151  , -15.372 ,  18.384 ,   1.6364, -19.377 ,  -1.1767,  35.964 ,  52.52  ,  36.865  ,  4.8872, -18.111 , -18.852 ,  -7.3317,  -5.7028,  -12.582 ,  -12.777  , -12.723  , -10.664 ,   7.7431 ,  12.695 , -11.81  ,   -0.95962,  32.724  , -18.783,  -61.25 ,  64.825,  109.5  , -142.25 , -133.87 ,  597.87 ,  1246.   ,  859.27 ),
        ( -9.7135,  2.4332 ,  75.391  ,  19.412, -29.105  ,  43.188 ,  17.627 ,  -2.764 ,  30.842 ,   9.8274,  19.826 , -29.621 ,  -5.1364 ,  8.4323, -55.101 ,  18.45  , -17.451 , -65.181 ,  -51.182 ,   18.133  ,  14.401  ,   6.3643, -18.177  ,  11.678 ,   2.9351,   65.708  , -91.026  ,  55.899, -117.35 , 133.39 , -189.59 ,  401.   ,  -29.461, 2192.2  , 11301.   , 8133.1  ),
        (-61.887 , 58.914  ,  10.665  , -43.014, -11.913  ,  13.452 , -64.709 , -38.644 , 126.18  ,   2.6656,  26.247 ,  23.897 ,  23.074  ,  8.6102,  54.532 ,  58.588 ,   4.9823, -19.089 ,   97.749 ,    0.65637,  62.305  ,  98.413 , -28.809  , -21.482 , -41.981 , -125.26   ,  13.309  ,   2.934,  138.04 ,  66.458,  -90.481,  -60.92 ,   40.777,   18.484,   751.07 ,  988.83 )],
       dtype=[('att1', '<f8'), ('att2', '<f8'), ('att3', '<f8'), ('att4', '<f8'), ('att5', '<f8'), ('att6', '<f8'), ('att7', '<f8'), ('att8', '<f8'), ('att9', '<f8'), ('att10', '<f8'), ('att11', '<f8'), ('att12', '<f8'), ('att13', '<f8'), ('att14', '<f8'), ('att15', '<f8'), ('att16', '<f8'), ('att17', '<f8'), ('att18', '<f8'), ('att19', '<f8'), ('att20', '<f8'), ('att21', '<f8'), ('att22', '<f8'), ('att23', '<f8'), ('att24', '<f8'), ('att25', '<f8'), ('att26', '<f8'), ('att27', '<f8'), ('att28', '<f8'), ('att29', '<f8'), ('att30', '<f8'), ('att31', '<f8'), ('att32', '<f8'), ('att33', '<f8'), ('att34', '<f8'), ('att35', '<f8'), ('att36', '<f8')]), b'6')]
['LSST_TRAIN', 'target']
['relational', 'nominal']
[array([( 17.597 ,  0.22974, -29.654  , -59.21 , -72.064  , -58.355 , -24.086 ,   9.5313,  19.02  ,  -3.35  , -40.648 , -61.347 , -43.567  ,  4.9636,  49.192 ,  52.197 ,   4.6215, -66.308 , -116.57  , -118.12   , -77.84   , -28.137 ,   0.75407,   2.2877,  -7.7249,  -10.118  ,   0.80155,  17.232,   31.031,  43.985,   64.09 ,   92.687,  117.42 ,  119.82 ,    91.591,   43.719),
        (  8.1713, -5.8956 , -21.296  , -29.565, -25.855  , -12.052 ,   4.3008,  14.598 ,  14.387 ,   6.0219,  -2.9042,  -4.5803,   3.4607 , 15.837 ,  22.125 ,  14.07  ,  -7.1375, -29.114 ,  -34.959 ,  -15.402  ,  21.772  ,  53.311 ,  54.744  ,  19.398 , -31.246 ,  -55.44   , -15.065  ,  98.661,  254.82 , 395.92 ,  467.47 ,  445.85 ,  348.02 ,  218.49 ,   103.78 ,   30.689),
        ( -1.7842, 16.837  ,  29.103  ,  17.971,   0.46536,  -3.7655,   1.3528,   3.458 ,  -2.0542, -10.826 , -13.918 ,  -8.3675,  -0.84096,  2.9446,   3.1921,   1.3362,  -1.0521,  -5.1266,   -7.2751,   -5.0353 ,  -0.57403,   5.2968,   6.7921 ,   2.5037,  11.452 ,   30.371  ,  35.584  ,  59.439,  136.12 , 181.8  ,  126.67 ,  200.76 ,  779.53 , 1639.8  ,  1823.8  ,  950.92 ),
        (-19.706 ,  5.039  ,  -0.47503, -45.606, -59.151  , -15.372 ,  18.384 ,   1.6364, -19.377 ,  -1.1767,  35.964 ,  52.52  ,  36.865  ,  4.8872, -18.111 , -18.852 ,  -7.3317,  -5.7028,  -12.582 ,  -12.777  , -12.723  , -10.664 ,   7.7431 ,  12.695 , -11.81  ,   -0.95962,  32.724  , -18.783,  -61.25 ,  64.825,  109.5  , -142.25 , -133.87 ,  597.87 ,  1246.   ,  859.27 ),
        ( -9.7135,  2.4332 ,  75.391  ,  19.412, -29.105  ,  43.188 ,  17.627 ,  -2.764 ,  30.842 ,   9.8274,  19.826 , -29.621 ,  -5.1364 ,  8.4323, -55.101 ,  18.45  , -17.451 , -65.181 ,  -51.182 ,   18.133  ,  14.401  ,   6.3643, -18.177  ,  11.678 ,   2.9351,   65.708  , -91.026  ,  55.899, -117.35 , 133.39 , -189.59 ,  401.   ,  -29.461, 2192.2  , 11301.   , 8133.1  ),
        (-61.887 , 58.914  ,  10.665  , -43.014, -11.913  ,  13.452 , -64.709 , -38.644 , 126.18  ,   2.6656,  26.247 ,  23.897 ,  23.074  ,  8.6102,  54.532 ,  58.588 ,   4.9823, -19.089 ,   97.749 ,    0.65637,  62.305  ,  98.413 , -28.809  , -21.482 , -41.981 , -125.26   ,  13.309  ,   2.934,  138.04 ,  66.458,  -90.481,  -60.92 ,   40.777,   18.484,   751.07 ,  988.83 )],
       dtype=[('att1', '<f8'), ('att2', '<f8'), ('att3', '<f8'), ('att4', '<f8'), ('att5', '<f8'), ('att6', '<f8'), ('att7', '<f8'), ('att8', '<f8'), ('att9', '<f8'), ('att10', '<f8'), ('att11', '<f8'), ('att12', '<f8'), ('att13', '<f8'), ('att14', '<f8'), ('att15', '<f8'), ('att16', '<f8'), ('att17', '<f8'), ('att18', '<f8'), ('att19', '<f8'), ('att20', '<f8'), ('att21', '<f8'), ('att22', '<f8'), ('att23', '<f8'), ('att24', '<f8'), ('att25', '<f8'), ('att26', '<f8'), ('att27', '<f8'), ('att28', '<f8'), ('att29', '<f8'), ('att30', '<f8'), ('att31', '<f8'), ('att32', '<f8'), ('att33', '<f8'), ('att34', '<f8'), ('att35', '<f8'), ('att36', '<f8')])]
2459
```

<!-- livebook:{"output":true} -->

```
None
```

```elixir
alias VegaLite, as: Vl
require Explorer.DataFrame, as: DF
Explorer.Backend.get()
```

<!-- livebook:{"output":true} -->

```
Explorer.PolarsBackend
```

```elixir
bitcoin_usd = DF.from_csv!("/data/BTC-USD.csv", 
  dtypes: [ Volume: :s64, Date: :date ]) 
 

```

```elixir
bitcoin_usd |> DF.dtypes
```

<!-- livebook:{"output":true} -->

```
%{
  "Adj Close" => {:f, 64},
  "Close" => {:f, 64},
  "Date" => :date,
  "High" => {:f, 64},
  "Low" => {:f, 64},
  "Open" => {:f, 64},
  "Volume" => {:s, 64}
}
```

```elixir

cols = ~w(open high low close adj_close volume)
n_bitcoin_usd =
 	    bitcoin_usd |> DF.rename([:date, :open, :high, :low, :close, :adj_close, :volume])
  |> DF.mutate(
 	    for col <- across(^cols) do
 	      {col.name, (col - mean(col)) / standard_deviation(col)}
 	    end
 	  )
```

```elixir
n_bitcoin_usd |> DF.dtypes
```

<!-- livebook:{"output":true} -->

```
%{
  "adj_close" => {:f, 64},
  "close" => {:f, 64},
  "date" => :date,
  "high" => {:f, 64},
  "low" => {:f, 64},
  "open" => {:f, 64},
  "volume" => {:f, 64}
}
```

```python

```
